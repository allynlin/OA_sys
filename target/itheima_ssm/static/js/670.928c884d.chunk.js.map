{"version":3,"file":"static/js/670.928c884d.chunk.js","mappings":"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","sources":["pages/User/Login.tsx"],"sourcesContent":["import React,{useEffect} from \"react\";\r\nimport {Button, Form, Input, message, Switch, Radio, Layout} from 'antd';\r\nimport './index.scss'\r\nimport Cookie from 'js-cookie';\r\nimport {\r\n    teacherLogin,\r\n    departmentLogin,\r\n    leaderLogin\r\n} from \"../../component/axios/api\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {login} from \"../../component/redux/isLoginSlice\";\r\nimport {teacher, department, leader} from \"../../component/redux/userTypeSlice\";\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\n\r\nconst {Header, Footer, Content} = Layout;\r\n\r\nconst StudentForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [form] = Form.useForm();\r\n    const username = Form.useWatch('username', form);\r\n    const password = Form.useWatch('password', form);\r\n    const channel = Form.useWatch('channel', form);\r\n    const rememberme = Form.useWatch('rememberme', form);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // 获取地址栏中的参数\r\n        const url = window.location.hash;\r\n        // 获取地址栏中的参数是否有 403 字段\r\n        const is403 = url.indexOf('403') !== -1;\r\n        // 如果有 403 字段，就提示用户没有权限\r\n        if (is403) {\r\n            message.error('身份校验失败，请重新登录')\r\n        }\r\n    },[])\r\n\r\n    const onFinish = () => {\r\n        NProgress.inc();\r\n        switch (channel) {\r\n            case 'teacher':\r\n                onTeacherLogin()\r\n                break;\r\n            case 'department':\r\n                onDepartmentLogin()\r\n                break;\r\n            case 'leader':\r\n                onLeaderLogin()\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    // 登录函数\r\n    const onTeacherLogin = () => {\r\n        teacherLogin(username, password).then(res => {\r\n            NProgress.done(true);\r\n            if (res.code === 200) {\r\n                dispatch(teacher())\r\n                message.success(res.msg);\r\n                loginSuccess(\"teacher\")\r\n                isRemember()\r\n                navigate('/home/teacher')\r\n            } else {\r\n                message.error(res.msg);\r\n                loginError()\r\n            }\r\n        })\r\n    }\r\n    const onDepartmentLogin = () => {\r\n        departmentLogin(username, password).then(res => {\r\n            NProgress.done(true);\r\n            if (res.code === 200) {\r\n                dispatch(department())\r\n                message.success(res.msg);\r\n                loginSuccess(\"department\")\r\n                isRemember()\r\n                navigate('/home/department')\r\n            } else {\r\n                message.error(res.msg);\r\n                loginError()\r\n            }\r\n        })\r\n    }\r\n    const onLeaderLogin = () => {\r\n        leaderLogin(username, password).then(res => {\r\n            NProgress.done(true);\r\n            if (res.code === 200) {\r\n                dispatch(leader())\r\n                message.success(res.msg)\r\n                loginSuccess(\"leader\")\r\n                isRemember()\r\n                navigate('/home/teacher')\r\n            } else {\r\n                message.error(res.msg);\r\n                loginError()\r\n            }\r\n        })\r\n    }\r\n\r\n    // 登录成功或失败所作的操作\r\n    const loginSuccess = (e:string) => {\r\n        dispatch(login())\r\n        Cookie.set('userType', e, {expires: 7, path: '/', sameSite: 'strict'})\r\n    }\r\n    const isRemember = () => {\r\n        if (rememberme) {\r\n            Cookie.set('username', username, {expires: 7, path: '/', sameSite: 'strict'});\r\n            Cookie.set('password', password, {expires: 7, path: '/', sameSite: 'strict'});\r\n            Cookie.set('channel', channel, {expires: 7, path: '/', sameSite: 'strict'});\r\n        } else {\r\n            Cookie.remove('username');\r\n            Cookie.remove('password');\r\n            Cookie.remove('channel');\r\n        }\r\n    }\r\n    const loginError = () => {\r\n        Cookie.remove('username');\r\n        Cookie.remove('password');\r\n        Cookie.remove('channel');\r\n        Cookie.remove('userType');\r\n    }\r\n\r\n    const onReset = () => {\r\n        form.resetFields();\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={form}\r\n            name=\"login\"\r\n            labelCol={{\r\n                span: 8,\r\n            }}\r\n            wrapperCol={{\r\n                span: 8,\r\n            }}\r\n            onFinish={onFinish}\r\n            initialValues={{\r\n                username: Cookie.get(\"username\") || \"\",\r\n                password: Cookie.get(\"password\") || \"\",\r\n                rememberme: true,\r\n                channel: Cookie.get(\"channel\") || 'teacher',\r\n            }}\r\n        >\r\n            <Form.Item\r\n                label=\"用户名\"\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '请输入用户名',\r\n                        pattern: /^[a-zA-Z0-9]{1,20}$/\r\n                    },\r\n                ]}\r\n            >\r\n                <Input showCount maxLength={20} allowClear={true}/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"密码\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '请输入密码',\r\n                        pattern: /^[a-zA-Z0-9]{8,20}$/\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.Password showCount maxLength={20} allowClear={true}/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"登录渠道\"\r\n                name=\"channel\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '必须选择登陆渠道',\r\n                    },\r\n                ]}\r\n            >\r\n                <Radio.Group style={{display: \"flex\"}} buttonStyle=\"solid\">\r\n                    <Radio.Button value=\"teacher\">教师</Radio.Button>\r\n                    <Radio.Button value=\"department\">部门</Radio.Button>\r\n                    <Radio.Button value=\"leader\">领导</Radio.Button>\r\n                </Radio.Group>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"记住密码\"\r\n                name='rememberme'\r\n                valuePropName='checked'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '必须选择是否记住密码',\r\n                    },\r\n                ]}\r\n            >\r\n                <Switch style={{display: \"flex\"}} checkedChildren=\"是\" unCheckedChildren=\"否\"/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                wrapperCol={{}}\r\n            >\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    登录\r\n                </Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Button htmlType=\"button\" onClick={onReset}>\r\n                    重置\r\n                </Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Button htmlType=\"button\" onClick={() => {\r\n                    navigate('/register')\r\n                }}>\r\n                    注册\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n};\r\n\r\nconst Login = () => {\r\n    return (\r\n        <Layout>\r\n            <Header>\r\n                <span>校园 OA 系统登陆</span>\r\n            </Header>\r\n            <Content>\r\n                <StudentForm/>\r\n            </Content>\r\n            <Footer>校园 OA 系统 &copy; 2022 Created By allynlin</Footer>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Login;"],"names":["Header","Layout","Footer","Content","StudentForm","dispatch","useDispatch","Form","form","username","password","channel","rememberme","navigate","useNavigate","useEffect","window","location","hash","indexOf","message","onTeacherLogin","teacherLogin","then","res","NProgress","code","teacher","msg","loginSuccess","isRemember","loginError","onDepartmentLogin","departmentLogin","department","onLeaderLogin","leaderLogin","leader","e","login","Cookie","expires","path","sameSite","name","labelCol","span","wrapperCol","onFinish","initialValues","label","rules","required","pattern","showCount","maxLength","allowClear","style","display","buttonStyle","value","valuePropName","checkedChildren","unCheckedChildren","type","htmlType","onClick","resetFields"],"sourceRoot":""}