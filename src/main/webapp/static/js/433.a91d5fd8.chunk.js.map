{"version":3,"file":"static/js/433.a91d5fd8.chunk.js","mappings":"8QAmBOA,GADeC,EAAAA,EAAAA,YACNC,EAAAA,EAAAA,OACTC,EAAUC,EAAAA,EAAAA,OAEXC,EAAY,WACd,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,GAAzC,eACA,GADA,WACkCA,EAAAA,EAAAA,UAAS,KAA3C,eACA,GADA,WAC4CA,EAAAA,EAAAA,WAAS,IAArD,eACA,GADA,WAC4CA,EAAAA,EAAAA,WAAS,IAArD,eAAuBC,GAAvB,WACA,GAA4CD,EAAAA,EAAAA,WAAS,GAArD,eAAOE,EAAP,KACA,GADA,MACkDF,EAAAA,EAAAA,UAAS,6EAA3D,eAAOG,EAAP,KACA,GADA,KACeC,EAAAA,EAAAA,WAARC,GAAP,eACkBD,EAAAA,EAAAA,SAAc,YAAaC,GAU7C,OAAOH,GACH,SAAC,KAAD,CACII,OAAO,UACPC,MAAOJ,EACPK,OACI,SAAC,IAAD,CAAQC,KAAK,UAAwBC,QAAS,WAC1CZ,EAAS,oBAAqB,CAACa,SAAS,GAC3C,EAFD,yEAA2B,cAQnC,gBAAKC,UAAW,OAAhB,UACI,iBAAKA,UAAU,qBAAf,WACI,SAACpB,EAAD,CAAOqB,MAAO,EAAGD,UAAW,MAA5B,mDACA,UAAC,IAAD,CACIE,KAAK,QACLC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,IACnBE,cAAe,CAACC,UAAU,GAC1BC,SA7BC,SAACC,GACdpB,GAAkB,EACrB,EA4BeqB,aAAa,MANjB,WAQI,SAAC,SAAD,CACIC,MAAM,2BACNT,KAAK,gBACLU,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,6EAHtC,UAKI,UAAC,IAAD,CACIC,YAAU,EACVC,YAAY,2EACZC,iBAAiB,WACjBC,aAAc,SAACC,EAAOC,GAAR,OACTA,EAAQC,SAA+BC,cAAcC,SAASJ,EAAMG,cAD3D,EAJlB,WAQI,SAACvC,EAAD,CAAQyC,MAAM,OAAd,mBACA,SAACzC,EAAD,CAAQyC,MAAM,OAAd,mBACA,SAACzC,EAAD,CAAQyC,MAAM,MAAd,uBAIR,SAAC,SAAD,CACIb,MAAM,WACNT,KAAK,WACLU,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,gCAHtC,UAKI,SAAC,aAAD,OAGJ,SAAC,SAAD,CAAWZ,KAAK,WAAWuB,cAAc,UAAUpB,WAAY,CAACqB,OAAQ,EAAGtB,KAAM,IAAjF,UACI,SAAC,IAAD,6BAGJ,SAAC,SAAD,CAAWC,WAAY,CAACqB,OAAQ,EAAGtB,KAAM,IAAzC,UACI,SAAC,IAAD,CAAQP,KAAK,UAAU8B,SAAS,SAAhC,6BAQvB,EAQD,EANc,WACV,OACI,SAAC1C,EAAD,GAEP,C","sources":["pages/Apply/DepartmentChange/index.tsx"],"sourcesContent":["import {\r\n    Alert,\r\n    Button,\r\n    Checkbox,\r\n    DatePicker,\r\n    Form,\r\n    Input,\r\n    message,\r\n    Modal,\r\n    Radio,\r\n    Result,\r\n    Select,\r\n    Typography\r\n} from 'antd';\r\nimport React, {useEffect, useState} from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport './index.scss';\r\n\r\nconst {RangePicker} = DatePicker;\r\nconst {Title} = Typography;\r\nconst {Option} = Select;\r\n\r\nconst LeaveForm = () => {\r\n    const navigate = useNavigate();\r\n    const [AlertNum, setAlertNum] = useState(0);\r\n    const [AlertList, setAlertList] = useState([]);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isRenderResult, setIsRenderResult] = useState(false);\r\n    const [RenderResultTitle, setRenderResultTitle] = useState('正在获取部门变更申请记录');\r\n    const [form] = Form.useForm();\r\n    const leaveTime = Form.useWatch('leaveTime', form);\r\n\r\n    const onFinish = (values: any) => {\r\n        setIsModalVisible(true)\r\n    };\r\n\r\n    const onReset = () => {\r\n        form.resetFields();\r\n    };\r\n\r\n    return isRenderResult ? (\r\n        <Result\r\n            status=\"warning\"\r\n            title={RenderResultTitle}\r\n            extra={\r\n                <Button type=\"primary\" key=\"console\" onClick={() => {\r\n                    navigate('/record/leaveList', {replace: true})\r\n                }}>\r\n                    查看部门变更申请记录\r\n                </Button>\r\n            }\r\n        />) : (\r\n\r\n        <div className={'body'}>\r\n            <div className=\"zent-alert-example\">\r\n                <Title level={2} className={'tit'}>部门变更申请</Title>\r\n                <Form\r\n                    name=\"basic\"\r\n                    labelCol={{span: 8}}\r\n                    wrapperCol={{span: 16}}\r\n                    initialValues={{remember: true}}\r\n                    onFinish={onFinish}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Form.Item\r\n                        label=\"变更部门\"\r\n                        name=\"departmentUid\"\r\n                        rules={[{required: true, message: '请选择你需要变更的新部门'}]}\r\n                    >\r\n                        <Select\r\n                            showSearch\r\n                            placeholder=\"请选择你需要变更的新部门\"\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) =>\r\n                                (option!.children as unknown as string).toLowerCase().includes(input.toLowerCase())\r\n                            }\r\n                        >\r\n                            <Option value=\"jack\">Jack</Option>\r\n                            <Option value=\"lucy\">Lucy</Option>\r\n                            <Option value=\"tom\">Tom</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        rules={[{required: true, message: 'Please input your password!'}]}\r\n                    >\r\n                        <Input.Password/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{offset: 8, span: 16}}>\r\n                        <Checkbox>Remember me</Checkbox>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{offset: 8, span: 16}}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Index = () => {\r\n    return (\r\n        <LeaveForm/>\r\n    )\r\n}\r\n\r\nexport default Index;"],"names":["Title","DatePicker","Typography","Option","Select","LeaveForm","navigate","useNavigate","useState","setIsModalVisible","isRenderResult","RenderResultTitle","Form","form","status","title","extra","type","onClick","replace","className","level","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","autoComplete","label","rules","required","message","showSearch","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","includes","value","valuePropName","offset","htmlType"],"sourceRoot":""}